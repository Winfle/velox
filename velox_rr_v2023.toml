[velox]
build_args = ['-trimpath', '-ldflags', '-s -X github.com/roadrunner-server/roadrunner/v2/internal/meta.version=${VERSION} -X github.com/roadrunner-server/roadrunner/v2/internal/meta.buildTime=${TIME}']

[roadrunner]
ref = "master"

[github]
    [github.token]
    token = "${RT_TOKEN}"

    # ref -> master, commit or tag
    [github.plugins]
    # LOGS
    appLogger = { ref = "v4.1.1", owner = "roadrunner-server", repository = "app-logger" }
    logger = { ref = "v4.2.3", owner = "roadrunner-server", repository = "logger" }
    lock = { ref = "v4.5.1", owner = "roadrunner-server", repository = "lock" }

    # CENTRIFUGE BROADCASTING PLATFORM
    centrifuge = { ref = "v4.4.0", owner = "roadrunner-server", repository = "centrifuge" }

    # WORKFLOWS ENGINE
    temporal = { ref = "v4.4.0", owner = "temporalio", repository = "roadrunner-temporal" }

    # METRICS
    metrics = { ref = "v4.1.3", owner = "roadrunner-server", repository = "metrics" }

    # HTTP + MIDDLEWARE
    http = { ref = "v4.4.1", owner = "roadrunner-server", repository = "http" }
    gzip = { ref = "v4.1.4", owner = "roadrunner-server", repository = "gzip" }
    prometheus = { ref = "v4.1.4", owner = "roadrunner-server", repository = "prometheus" }
    headers = { ref = "v4.2.5", owner = "roadrunner-server", repository = "headers" }
    static = { ref = "v4.1.5", owner = "roadrunner-server", repository = "static" }

    # OpenTelemetry
    otel = { ref = "v4.3.1", owner = "roadrunner-server", repository = "otel" }

    # SERVER
    server = { ref = "v4.4.1", owner = "roadrunner-server", repository = "server" }

    # SERVICE aka lightweit systemd
    service = { ref = "v4.4.3", owner = "roadrunner-server", repository = "service" }

    # JOBS
    jobs = { ref = "v4.7.1", owner = "roadrunner-server", repository = "jobs" }
    amqp = { ref = "v4.9.0-beta.1", owner = "roadrunner-server", repository = "amqp", replace="" }
    sqs = { ref = "v4.5.3", owner = "roadrunner-server", repository = "sqs" }
    beanstalk = { ref = "v4.5.3", owner = "roadrunner-server", repository = "beanstalk" }
    nats = { ref = "v4.5.3", owner = "roadrunner-server", repository = "nats" }
    kafka = { ref = "v4.4.4", owner = "roadrunner-server", repository = "kafka" }

    # KV
    kv = { ref = "v4.4.3", owner = "roadrunner-server", repository = "kv" }
    boltdb = { ref = "v4.7.2", owner = "roadrunner-server", repository = "boltdb" }
    memory = { ref = "v4.6.2", owner = "roadrunner-server", repository = "memory" }
    redis = { ref = "v4.2.4", owner = "roadrunner-server", repository = "redis" }
    memcached = { ref = "v4.3.2", owner = "roadrunner-server", repository = "memcached" }

    # FILESERVER (static files)
    fileserver = { ref = "v4.1.4", owner = "roadrunner-server", repository = "fileserver" }

    # gRPC plugin
    grpc = { ref = "v4.5.1", owner = "roadrunner-server", repository = "grpc" }

    # HEALTHCHECKS + READINESS CHECKS
    status = { ref = "v4.4.2", owner = "roadrunner-server", repository = "status" }

    # TCP for the RAW TCP PAYLOADS
    tcp = { ref = "v4.2.0", owner = "roadrunner-server", repository = "tcp" }

#[gitlab]
#    [gitlab.token]
#    # api, read-api, read-repo
#    token = "${GL_TOKEN}"
#
#    [gitlab.endpoint]
#    endpoint = "https://gitlab.com"
#
#    [gitlab.plugins]
#    # ref -> master, commit or tag
#    test_plugin_1 = { ref = "main", owner = "rustatian", repository = "36405203" }
#    test_plugin_2 = { ref = "main", owner = "rustatian", repository = "36405235" }
#
[log]
level = "debug"
mode = "development"
